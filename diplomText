Einleitung
Seit ich denken kann, haben in meine Umfeld Personal Computer exisitert.
Mein Vater, ein IT-Quereinsteiger, hat mich an sie herangeführt und nach meine ersten Erfahrungen mit Computerspielen war es um mich geschehen.
Im weiteren Verlauf meines Lebens wären Games immer präsent, standen jedoch mal mehr und mal weniger im Mittelpunkt.
Während meiner Ausbildung an der WMI (Wirtschaftsmittelschule mit Schwerpunkt Informatik) bin ich zum ersten Mal in Berührung mit Programmcode gekommen als ich die Website des WWF Schweiz betreut und erweitert habe. Meine erworbenen Kenntnisse habe ich nach meinem Abschluss autodidaktisch vertieft.
Im HyperWerk konnte ich auf diese Kenntnisse aufbauen und habe begonnen Programmieren zu meiner Hauptbeschäftigung zu machen. Mit Processing (www.processing.org), einem Open Source Umgebung für grafische Aufgaben, habe ich verschiedenste Projekte und einen Workshop gemacht.
Mit meinem Diplomprojekt will ich auf diese Wissen/Können aufbauen und mir das Medium Computerspiel als kreative/künstlerische Ausdrucksform aneignen und anderen zugänglich machen.

State of the Art
Künstlern war das Medium Computerspiel nie fremd. (These) Sie hatten oft Erfahrung mit den Spielen selber oder mit ähnlicher Software (Architekten mit CAD-Tools). Als eines der ersten Werke in denen Computerspiele in einem künstlerischen Kontext erstellt oder modifziert wurde ist ArsDoom von Orhan Kipcak mit Reinhard Urban, das für die Ars Electronica 1995 umgesetzt wurde. Mit den Bauplänen wurde der Ausstellungsraum, das Brücknerhaus in Linz, für das Spiel nachgebaut. Die an der Ars Electronica teilnehmenden Künstler wurden aufgerufen für das digitale Abbild des Ausstellungshauses virtuelle Kunstwerke einzureichen.
Der Spieler kann diesen digitalen Ausstellungsraum besuchen und dort interaktive Objekte aufsammeln. Herman Nitschs Blut, Arnulf Rainers Bleistift und die Fähigkeit Kunstwerke im Stil von Georg Baselitz zu drehen ermöglicht dem Spieler mit den Kunstwerken zu interagieren.
"This important for an ego-shooter: With Arnulf Rainer you paint over artworks, with Nitsch you soak them in blood, with Baselitz you turn them upside-down. Those are significant interaction facilities for the gamer – the gameplay becomes more appealing." ->http://bit.ly/O0LyEq
Ein aktuelle Beispiel, das mich auch persönlich total in Bann gezogen hat, ist Superbrothers: Sword & Sworcery EP (http://bitly.com/Ni9hwp). Das Spiel ist die konsequente Weiterführung der Idee des Konzeptalbums in das Medium Computerspiel. Der Musiker Jim Guthrie hat mit den Entwicklern von Superbrothers ein Werk geschaffen, das rudimentäre spielerische Elemente enthält und den Spieler jederzeit sehr eng führt aber akustisch und visuell Atemberaubend ist. D.h der künstlerische Aspekt ist wichtiger als das Spiel und seine Mechanik.
Der Bereich der generative Gestaltung hat durch das Aufkommen von Entwicklungsumgebungen für Visuelle Arbeiten wie Processing(http://bit.ly/MlrhIu), Openframeworks(http://bitly.com/PHJwDJ), VVVV(http://bit.ly/O860Do), QuartzComposer(http://bit.ly/P8cty5) usw. grossen Zulauf erhalten. Diese Projekte haben die Eintrittsschwelle für Interessierte um ein Vielfaches gesenkt, da sie die vielfältigen technischen Schranken/hürden abbauen und umfangreiche Lernmaterialen zur Verfügung stellen. Aktuelle Projekte wie WrittenImages(http://bitly.com/MV4eRL) oder Generative Book Covers by Ligia Duro(http://bitly.com/RDXrku) zeigen zusammen mit Büchern wie Generative Gestaltung - Entwerfen, Programmieren, Visualisieren (http://bit.ly/RE1Rba) auf, dass das Konzept der generativen Gestaltung und die Umsetztung desselben keine Randerscheinung für eine technisch begabte Randgruppe mehr ist.
Die Computerspiele-Industrie befindet sich zur Zeit in einem grundlegendem Umschwung. Das traditionelle Distributionsmodell, Entwickler arbeiten im Auftrag von Herausgeber, die mit Ladenketten Abnahme- und Vertriebverträge eingehen und für Marketing und weitere Auslagen aufkommen, mit Blockbuster, d.h. Titel die sich in den Startwochen in ein- bis zweistelligen Millionen Stück Absatz bewegen, ist stark unter Beschuss. Aus zwei Gründen: Erstens digitale Distributionsplattformen wie Steam(http://bit.ly/REjLue) oder Origin(http://bit.ly/MlIuS3) in Zusammenspiel mit billigem Hochleistungsinternet erlauben den Vertrieb ohne physkalische Datenträger, d.h. es muss vorgängig kein Kapital für Abnahme- und Vertriebsverträge und für die Produktion der Datenträger vorhanden sein. Dies ermöglicht kleinen und unabhängigen Studions, sogennante Indie-Studios, ihre Produkte ohne grosses geschäftliches Risiko einem grossen Publikum zugänglich zu machen. Zweitens nähern sich Budgets von grossen Blockbuster-Spielen denen von Blockbuster-Filmen an. Sie haben jedoch einen entscheidenden Nachteil.
"Video games don’t have that type of cushion that films have.  They have to break even on the $60 price tag.  It becomes impossible for game publishers to earn back those costs when the game starts hitting bargain bin prices.  Selling 2 to 3 million copies doesn’t do any good if you are selling them for less than $50-$60.  And when customers buy used games, developers and publishers do not see a single cent from that." -> http://bitly.com/NSrRZR
Bei Budgets um die $100 Millionen kann ein einzelnes finanziell gescheiteres Spiel das aus für ein Studio bedeuten. Dieser Trend wird sich mit der nächsten Technologie-Generation verstärken, da man für diese noch mehr Aufwand bei der Erstellung der Spielinhalte haben wird.
Der Idee "bessere (näher am Photorealisitschen) Grafik = bessere Spiele" ist jedoch nicht Konsens. Vorallem Indie-Studios, die gar nicht die Arbeitskraft haben um eine grosse Menge an hochaufgelösten Spielinhalte zu produzieren, suchen andere Wege um ihre Spielwelten sinn- und kunstvoll darzustellen.
A couple of years ago I sat on a panel with Viktor “City 17″ Antonov and asked him whether he thought increasing fidelity in gaming was important. For someone interested in fantastical architecture and complex visions of fantasy cities, you might have thought he’d say yes. But he said no. The challenge – I paraphrase here – was to work out how to use less detail. The challenge, he said, is to use style and abstraction to convey meaning and emotional gravity. Art, not technical photography or documentary, is the thing to look for when exploring new frontiers. -> http://bit.ly/MJ0FCN
Das populärste und erfolgreichste Indie-Game der letzten Jahre, Minecraft (http://bit.ly/P0OiQZ), baut auf diesen Punkten auf. Der Stil ist äusserst minimalistisch und zweckgebunden, denn der eigentliche Hauptdarsteller sind die riesigen generierten Landschaften aufgebaut aus verschieden texturierten Blöcken, die der Spieler erkunden und nach seinem Gutdünken durch Ingame-Werkzeug umgestalten kann. Durch diesen cleveren Kunstgriff, der die Entwickler von der Verantwortung befreit diese Welten von Hand zu gestalten aber auch den Wiederspielwert ins Unendliche steigert, wurde das Spiel einen riesen Erfolg und ist nun Teil der Populärkultur der Gamer.
Als Beispiel für die fortwährende Entwicklung die mit Minecraft ihren Anfang genommen hat, kann "Sir, You Are Being Hunted" (http://bit.ly/P1B3zB) betrachtet werden. Eine abgerdrehte Welt in der Tee trinkende Roboter in der englischen Countryside Jagd auf Menschen machen, mitsamt Roboterhunden. Dieser ungewönliche Plot lässt darauf schliessen, das auch bei der Gestaltung keine ausgetretenen Wege beganngen wurden. Um keine (zukünftige) Arbeitskraft mit dem Erstellen von ähnlichen Landschaften aufzureiben, wird diese aus Code erschaffen.
"There are a few main reasons that we chose to use procedural generation over less code-based approaches. The most important one, of course, is that as a small independent developer we could never afford the resources, production time, or team size to produce the large, explorable game worlds that we all love at Big Robot. [...] In short: maths lets us do what our budget does not." (http://bit.ly/ORUHLE)
Herausforderung
Ein Diplom das sich mit dem Thema Computerspiele beschäftigt, trifft am Hyperwerk auf zweierlei Herausforderungen. Sie müssen den allgemeinen Kriterien einer Abschlussarbeit genügen sowie den Aufwand aufzeigen, den Programmcode schreiben mit sich bringt. Diesen Aspekt möchte ich in meiner Arbeit speziell berücksichtigen indem ich Andockmöglichkeiten anbiete, eine Einführung in die Programmierung ist jedoch aufgrund der Komplexität des Themas nicht zu erwarten.
These
Geschichten brauchen Welten, mit Medien kann man Welten bereitstellen, Computerspiele erlauben immersive, selbst zu erkundende Welten und Computerspiele kombiniert mit generativen Elementen ermöglichen selbstgestaltenden, immerzu neue und immersive Welten ohne jede Iteration einzel zu entwerfen.
Schon Jacques Tati hatte mit Play Time (1967) die Vision einer Welt, die nicht nur als Kulisse für eine Geschichte dient sondern als erkundet werden soll. Dazu baute er eines der grössten und komplexesten Filmsset, Tativille. 
"Making Tativille a reality took a hundred constructions workers, almost 12000 square feet of glass and half a million square feet of concrete. The set had it's own power plant, roads, electrical grid, and even fully working elevators." ->playtime ausstellungskatalog, playtime - videogame mythologies, josé luis de vicente, s. 149
Während dem fällt auf, das Distanz zwischen dem Betrachter und der Hauptperson, Monsieur Hulot, geschaffen wird. Oft strandet der Held entfernt von der Repräsentation des Betrachters, das Kamerauge, in der Mitte eines Raumes während sich ihm, genauso wie dem Zuschauer, der Sinn der Gegenstände in seiner Umgebung nicht erschliesst. Um dieses Gefühlt des Neuen, Ungewohnten aufrecht zu erhalten, betritt Hulot, neben dem Flughafen welcher Beginn und Ende des Films ist, keinen Raum zweimal.
"When the film starts, both the viewer and the main character are droppped in this world with little explanation. Since there are no central conflicts, no obvious big ide moving the plot forward, the main narrative device is exploration; getting Hulot from one point to another. But in order to to do this, he must understand the rules of every space, its properties and possibilities."->playtime ausstellungskatalog, playtime - videogame mythologies, josé luis de vicente, s. 150
Finanziell war dieser Film für Tati jedoch ein Fiasko, der dazu führte das Play Time ein Unikum blieb. Heute ist es ein Klassiker, obwohl Tati etwas versucht hat wofür das Medium Film nicht gemacht ist, dem Konsumenten einen explorativen Prozess innerhalb einer erzählten Welt zu bieten. Das Problem im Medium Film ist, dass die Fremdheitserfahrung, die in einer unbekannten Umgebung auftritt, etwas sehr Spezifisches ist. Oft ist der Interessenschwerpunkt des Betrachters nicht deckungsgleich mit dem Ziel der Hauptperson, was die Attraktivität der Erfahrung für den Zuschauer vermindert. Diese Dissonanz kann mit dem interaktivem Medium des Computerspiels aufgehoben werden, vorrausgesetzt der Erschaffer der künstlichen Welt sieht eine Exploration vor.
Methoden und Vorgehen
Recherche
Während meiner Recherchephase habe ich mich auf zwei Kernthemen konzentriert: Eine Recherche zur generellen Ästhetik von Computerspielen sowie zur Welt der Computerspieler,(zusätzlich habe ich versucht den allgemeinen Neuigkeiten zu folgen.)
Vorgehen Recherche
Meine Arbeit begann damit, das ich versuchte Fachliteratur zum Thema Ästhetik in Computerspielen zu finden. Von Catherine Walthard, Dozentin am Hyperwerk, bekam ich die Kontaktdaten von Reinhard Storz, Dozent für Kunst- und Medienwissenschaft an der Hochschule für Gestaltung und Kunst Basel und Experte für neue Medien. Im November 2011 habe ich mich zwei Mal mit ihm getroffen um mein Projekt vorzustellen und um Hinweise für nützliche Literatur zu erhalten. Von meinem Projekt angetan hat mir verschiedenste Werke wie Claus Pias -  Computer Spiel Welten, Mark J.P. Wolf und Bernard Perron - The Video Game Theory Reader oder Lev Manovich - The Language Of New Media empfholen. Dieser Veröffentlichungen betrachten Computerspiele jedoch von einer technischen oder theoretischen Seite, eine generelle Ästhetik wird nicht beschrieben.
Ich habe dann begonnen meine, durch die Jahre gewachsene, Spielesammlung nach aktuelleren und exemplarischen Spielen druchzuschauen. In diesem Zusammenhang habe ich mich auf Spiele aus der Nische der Indie-Games konzentriert und als Ergänzung wegweisende AAA-Titel selektiert. Alle Titel sind relativ aktuell, d.h. zwischen 2008 und 2012 erschienen.
Anschliessend habe ich von diesen Spielen mit Hilfe einer Software während des Spielens automatisch Bildschirmfotos gemacht.
Als Reflexion dieser Bilder habe ich versucht ein Stück Software zu schreiben, das die Vergleichbarkeit erhöht. Meine ersten Versuche waren nicht sehr aussagekräftig und ich fühlte mich in einer Sackgasse. (bild einfügen von erstem Code)
Ich bin dann auf einen Artikel "Z/Z/Z/ – Archiving film, animation and videogame image analysis" (http://bitly.com/MsM9xH) gestossen. Ein Projekt von Daniel Rehn und Sarah Caluag mit dem Ziel “describing the dimension of cultural artifacts that are difficult to explain using natural language”. Sie benutzten selbst entworfenen Software um Bildmaterial von neuen Medien zu analysieren (http://bit.ly/RQr2r5). DIesen Ansatz habe ich aufgegriffen, meine eigene Abwandlung entwickelt und diese auf mein Material angewandt. Das Ausgangsprodukt sind eine Animation mit dem übersicht über alle Screenshots, sowie jeweils eine Sammlung aller horizontalen Schnitte sowie eine Sammlung aller vertikalen Schnitte, die jeweils mittig erfolgten. (Sie ermöglichen auf den ersten Blick eine Aussage über die Farbigkeit eines Spiels, sowie über die Menge von Helligkeit bzw. über die Abwesenheit derselben.)
Der zweite Teil meiner Recherche entsprach mehr einer Reflexion, denn ich befinde und lebe in der Welt der Computerspieler. Daher bestand meine Aufgabe daraus, mir Unterstüztung zu suchen, mit deren Hilfe ich meine eigenen Lebenswelt reflektieren und sinnvoll für Aussenstehende wiedergeben kann. Dazu habe ich zu einer Veranstaltung aufgerufen, "eine kurze Geschichte der Computerspiele", wo ich über Inspirationsquellen zu meinem praktischen Teil meiner Arbeit erzählt habe und Spiele kommentiert vor Zuschauer gespielt habe. Anschliessend habe ich mich mit Daniela Vieli und Ralf Neubauer zusammengesetzt um Ralf eine stufenweise Einführung in die Welt der Computerspiele zu geben, Daniela hatte sich bereit erklärt uns zu begleiten. In Absprache mit ihnen habe ich zwei Treffen im kleinem Rahmen organisiert. Bei unserem ersten Treffen habe ich Ralf eine Einführung in die Wii-Konsole von Nintendo gegeben, die eine einfach zu erlernende Steuerung hat, die sich an der natürlichen Bewegung orientiert.
Unser zweites Treffen bestand darin, das wir uns den Film "Indie Game: The Movie"(http://bit.ly/PbgrFc) zusammen angeschaut haben und anschliessend ein Gespräch über den Film und Ralfs Eindrück der Spielerwelt geführt haben.
Ausserdem Veranstaltungen
gamespace muss da rein und workshop zu diplom
Kooperationen
Auf der Suche nach einem Partner, der mir bei der Gestaltung der Geräuschlandschaft meines Experiments behilflich sein kann, habe ich mich an Heike Sperling, Professorin am Institut für Musik und Medien in Düsseldorf und Gastdozentin am Hyperwerk, gewandt. Meine Anfrage wurde von Ihr an die Studenten weitergeleitet worauf ich innert Stunden eine grosse Anzahl an Rückmeldungen von interessierten Studenten erhielt. Nach Rücksprache mit Heike habe ich mich für Lukas Truniger (http://bit.ly/PZvzBp), Student am IMM im 8. Semester, entschieden. DIe Zusammenarbeit mit ihm läuft über Plattformen wie GitHub und Dropbox, kommunziert wird via Skype und Email. Er hat in Rücksprache mit mir ein Konzept für die Geräusche der Planeten entwickelt, dass ich anschliessend in Code übersetzt und in mein Fragment integriert habe.
praktische Umsetzung oder Prozess?
Zu Beginn meines Diploms habe ich mit Fragmenten, also eng umrissene Experimente, die einzelne Konzepte/Ideen die ich während meiner Recherche entwickelt habe, darlegen.
Ich habe für alle Projekte OpenFrameworks(http://bitly.com/PHJwDJ) benutzt. OpenFrameworks ist eine Sammlung von gängigen Funktionen für Multimedia-Applikationen wie das Zeichnen von 2- und 3D Grafiken, Netzwerkkommunikation, Maus- und Tastatursteuerung für die Programmiersprache C++. Gepflegt wird dieses Open-Source Projekt von einer internationalen Gemeinschaft von Programmierern. 
Für das OpenHouse im Januar 2012, Tag der offenen Tür im HyperWerk, habe ich ein solches Fragment entworfen und programmiert. Das Ziel war eine isometrisch dargestellte generative Landschaft für ein Shoot ’em up zu kreieren. 
"Ein typischer Level in einem Shoot ’em up besteht aus einem vorgegebenen, vorbeiscrollenden Hintergrund und einer vorgegeben Anzahl an unterschiedlichen Formationen von Gegnern." (http://bit.ly/Nnnmbk)
Diese vorbeiscrollenden Hintergrund soll aus geometrischen Körpern aufgebaut sein, die der Form von Basaltprismen nachempfunden sind, die sich ständig verändert.
Dazu habe ich eine Software entworfen, die einen stetigen Fluss an solchen Prismen generiert, diese von oben nach unten über den Bildschirm wandern lässt und sobald sie nicht mehr sichtbar sind, löscht. (bild einfügen)
Während der Vorbereitung für meine Veranstaltung "eine kurze Geschichte der Computerspiele" habe ich den dritten Teil der Mass Effect Serie gespielt. Ein zentraler Teil dieser Serie ist das Bereisen des Spieluniversums mit einem Raumschiff, das über eine Übersichtskarte gesteuert wird. Die Ziele, die man ansteuern kann sind visuell äusserst attraktive Planeten, die in meinen Augen immer die heimlichen Hauptdarsteller waren. Zu dieser Zeit war ich auch auf der Suche nach einem Spielkonzept indem der explorative Prozess und die Spielerfahrung, als nicht ein von einer Narration angetriebenes Spiel, eine Hauptrolle spielt. Im Laufe der Zeit habe ich dann ein Konzept für ein Spiel mit Planeten als der Dreh- und Angelpunkt entwickelt.
Der erste Entwurf sah vor, dass Spieler mit ihrem Smartphone einen Planeten erzeugen und dieser anschliessend in der physikalischen Welt am am gleichen Ort bleibt, nur sichtbar durch das Smartphone als Fenster zur virtuellen Welt. Diese Idee war aus folgenden Gründen nicht umsetzbar: Die zusätzliche Anpassungen für eine reibungslosen Betrieb auf Smartphones (d.h. für IPhones und Android) sind zeitlich bis zur Ende des Diploms nicht zu stemmen, die zusätzliche Arbeit für die Augmented Reality Funktionen sind grundsätzlich vertretbar, auf einer anderer Plattform als dem tragbaren Telefon mit Kamera und GPS-Sensor macht dir Arbeit daran keinen Sinn. Daher wurde die usprüngliche Idee verkleinert und Computer als Plattform ausgewählt, denn OpenFrameworks läuft ohne zusätzliche Anpassungen darauf.
Der finale Plan für das Spiel ist pro Computer ein Planet. Jeder Planet besitzt vier Resourcen-Typen, deren Menge sein Aussehen via einem generativen Prozess bestimmen. Jedes kabellose Netzwerk ist ein Sonnensystem, die Spieler können durch Eintritt/Austritt Planeten hinzufügen oder entfernen. Die Spieler können untereinander Ressource tauschen, was sie aktiv das Aussehen der Planeten verändern lässt. Um trozdem einen externen Zufluss von Ressourcen zu haben, wird das Spiel Runden enthalten, bei deren Ablauf, die Planeten neue Ressourcen erhalten, die Menge wird Eigenschaften des Planeten beeinflusst. Diese Eigenschaften sind unabhängig vom Programmcode formuliert und daher kann die Spielmechanik ohne Änderung am Code beeinflusst werden. Die Spieler können per Spiel nicht kommunzieren sondern müssen sich mündlich absprechen.
Meine Idee habe ich meinen Technik-Coach, Philip Withfield, vorgestellt, der sie sehr ansprechend fand. Auch mein Coach am HyperWerk, Anka Semming, war von der Idee angetan. Alle Personen mit dennen ich über mein Konzept geredet haben konnten meine Begeisterung teilen. Daher habe ich dann an diesem Punkt entschieden, die ursprüngliche Planung für mein Projekt zu ändern und anstatt von Fragmenten ein grösseres Experiment zu realisieren.
Technik
(Grafik basteln)
Für mein Exponat am OpenHouse habe ich eine simple Lösung entworfen, jedes Prisma besteht aus einem Sechseck, das sich an einem Fluchtpunkt orientiert und drei Wände, die an den Punkte des perspektivisch angepassten Sechsecks angepasst werden. Für ein neues Prisma wird nur eine neue Farbe sowie eine neue Höhe generiert und gespeichert. Diese gespeicherten Werte werden dann aufgerufen und in Bewegung auf den Bildschirm gezeichnet. Ein eher kleines Projekt, das jedoch ein guter Start in den praktischen Teil meines Jahres war. (ca. 263 Linien Code)
Mein Experiment ist vom Umfang her um einiges grösser und komplexer. Ich möchte hier jedoch nur auf den Hauptteil, die Gestaltung der Planeten eingehen. Der Planet besitzt eine Liste mit Objektien, die Resourcen repräsentieren. Jedes dieser Objekt enthält eine Zahl, die die derzeitige Menge der Resource beschreibt. Wenn das Aussehen eines Planeten neu generiert wird passiert folgendes. Zuerst wird die Liste der Resourcen absteigend nach Menge sortiert. Die Farbe des ersten Objekt aus der Liste wird ausgelesen und es wird eine Kugel mit dieser Farbe in der Grösser der Summe aller Resourcenmengen gezeichnet. Für alle anderen Resourcen wird eine transparente Kugel gezeichnet, die minim grösser als die Grundkugel sind. Für diese zusätzlichen Ebenen werden Bilder mit Flächen generiert (siehe Generative Gestaltung, Formen aus Agenten, S. 224 und Generative Gestaltung, Der Attraktor, S. 396), die Fläche entspricht der Menge der Resource, die Farbe entspricht einer der Grundfarbe angepassten Farbe der Resource. Diese Bilder werden auf die Kugel gezeichnet. Anschliessend wird das Geräusch berechnet. Dazu exisiteren für jedes Resourcen-Objekt zwei Sounddateien, ein Grundgeräusch und ein Geräusch für den Raum. Die Lautstärke der Grundelement ist die relative Menge der Resource, das Raumgeräusch ist wird um 9/10 gedrosselt. Anschliessend wird die Entfernung auf der Y-Achse zwischen Kamera und Planet benutzt um die Lautstärke nachzuregeln, die Entfernung auf der X-Achse wird auf Position des Signals im Stereo-Panorama abgebildet unddie Geschwindikeit des Planeten wird an die Abspielgeschwindikeit gekoppelt. Somit entsteht der Eindruck von Raumklang. Diese Projekt enthalt jedoch noch viel mehr Programmcode unter anderem für Netzwerkkommunikation, Interaktion mit dem Benutzer, Benutzeroberfläche usw. (ca. 1986 Linien Code). (Grafik basteln)
